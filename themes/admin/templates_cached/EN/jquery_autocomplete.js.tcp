<?php
return unserialize("a:5:{i:0;a:1:{i:0;a:1:{i:0;a:5:{i:0;s:33:\"tcpfunc_5abfd0ba8cb916.83971490_1\";i:1;a:0:{}i:2;i:1;i:3;s:0:\"\";i:4;s:0:\"\";}}}i:1;a:0:{}i:2;s:19:\"jquery_autocomplete\";i:3;N;i:4;a:1:{s:33:\"tcpfunc_5abfd0ba8cb916.83971490_1\";s:23148:\"\$tpl_funcs['tcpfunc_5abfd0ba8cb916.83971490_1']=\$KEEP_TPL_FUNCS['tcpfunc_5abfd0ba8cb916.83971490_1']=recall_named_function('5abfd0ba8cbae8.11637608','\$parameters,\$cl',\"echo \\\"// NB: This is based on andrewsnowden's fork, plus other people's fixes, our own fixes, and changes brought in direct from Bevis Zhao\\\\n\\\\n/**\\\\n * jQuery plugin for getting position of cursor in textarea\\\\n\\\\n * @license under Apache license\\\\n * @author Bevis Zhao (i@bevis.me, http://bevis.me)\\\\n */\\\\n\\\\\\\$(function() {\\\\n\\\\n	var calculator = {\\\\n		// key styles\\\\n		primaryStyles: ['fontFamily', 'fontSize', 'fontWeight', 'fontVariant', 'fontStyle',\\\\n			'paddingLeft', 'paddingTop', 'paddingBottom', 'paddingRight',\\\\n			'marginLeft', 'marginTop', 'marginBottom', 'marginRight',\\\\n			'borderLeftColor', 'borderTopColor', 'borderBottomColor', 'borderRightColor',\\\\n			'borderLeftStyle', 'borderTopStyle', 'borderBottomStyle', 'borderRightStyle',\\\\n			'borderLeftWidth', 'borderTopWidth', 'borderBottomWidth', 'borderRightWidth',\\\\n			'line-height', 'outline', 'text-align'],\\\\n\\\\n		specificStyle: {\\\\n			'word-wrap': 'break-word',\\\\n			'overflow-x': 'hidden',\\\\n			'overflow-y': 'auto'\\\\n		},\\\\n\\\\n		simulator : \\\\\\\$('<div id=\\\\\\\"textarea_simulator\\\\\\\"/>').css({\\\\n				position: 'absolute',\\\\n				top: 0,\\\\n				left: 0,\\\\n				visibility: 'hidden'\\\\n			}).appendTo(document.body),\\\\n\\\\n		toHtml : function(text) {\\\\n			return text.replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/\\\\\\\\n/g, '<br>')\\\\n				.split(' ').join('<span style=\\\\\\\"white-space:prev-wrap\\\\\\\">&nbsp;</span>');\\\\n		},\\\\n		// calculate position\\\\n		getCaretPosition: function() {\\\\n			var cal = calculator, self = this, element = self[0], elementOffset = self.offset();\\\\n\\\\n			// IE has easy way to get caret offset position\\\\n			if (\\\\\\\$.browser.msie) {\\\\n				// must get focus first\\\\n				try {\\\\n					element.focus();\\\\n				}\\\\n				catch (ex) {}\\\\n				var range = document.selection.createRange();\\\\n				\\\\\\\$(element).val(element.scrollTop);\\\\n				return {\\\\n					left: range.boundingLeft - elementOffset.left,\\\\n					top: parseInt(range.boundingTop) - elementOffset.top + element.scrollTop\\\\n						+ document.documentElement.scrollTop + parseInt(self.getComputedStyle('fontSize'))\\\\n				};\\\\n			}\\\\n			cal.simulator.empty();\\\\n			// clone primary styles to imitate textarea\\\\n			\\\\\\\$.each(cal.primaryStyles, function(index, styleName) {\\\\n				self.cloneStyle(cal.simulator, styleName);\\\\n			});\\\\n\\\\n			// calculate width and height\\\\n			cal.simulator.css(\\\\\\\$.extend({\\\\n				'width': self.width(),\\\\n				'height': self.height()\\\\n			}, cal.specificStyle));\\\\n\\\\n			var value = self.val(), cursorPosition = self.getCursorPosition();\\\\n			var beforeText = value.substring(0, cursorPosition),\\\\n				afterText = value.substring(cursorPosition);\\\\n\\\\n			var before = \\\\\\\$('<span class=\\\\\\\"before\\\\\\\"/>').html(cal.toHtml(beforeText)),\\\\n				focus = \\\\\\\$('<span class=\\\\\\\"focus\\\\\\\"/>'),\\\\n				after = \\\\\\\$('<span class=\\\\\\\"after\\\\\\\"/>').html(cal.toHtml(afterText));\\\\n\\\\n			cal.simulator.append(before).append(focus).append(after);\\\\n			var focusOffset = focus.offset(), simulatorOffset = cal.simulator.offset();\\\\n			// alert(focusOffset.left  + ',' +  simulatorOffset.left + ',' + element.scrollLeft);\\\\n			return {\\\\n				top: focusOffset.top - simulatorOffset.top - element.scrollTop\\\\n					// calculate and add the font height except Firefox\\\\n					+ (\\\\\\\$.browser.mozilla ? 0 : parseInt(self.getComputedStyle('fontSize'))),\\\\n				left: focus[0].offsetLeft -  cal.simulator[0].offsetLeft - element.scrollLeft\\\\n			};\\\\n		}\\\\n	};\\\\n\\\\n	\\\\\\\$.fn.extend({\\\\n		setCursorPosition : function(position){\\\\n			if(this.length == 0) return this;\\\\n			return \\\\\\\$(this).setSelection(position, position);\\\\n		},\\\\n		setSelection: function(selectionStart, selectionEnd) {\\\\n			if(this.length == 0) return this;\\\\n			input = this[0];\\\\n\\\\n			if (input.createTextRange) {\\\\n				var range = input.createTextRange();\\\\n				range.collapse(true);\\\\n				range.moveEnd('character', selectionEnd);\\\\n				range.moveStart('character', selectionStart);\\\\n				range.select();\\\\n			} else if (input.setSelectionRange) {\\\\n				try {\\\\n					input.focus();\\\\n				}\\\\n				catch (ex) {}\\\\n				input.setSelectionRange(selectionStart, selectionEnd);\\\\n			} else {\\\\n				var el = this.get(0);\\\\n\\\\n				var range = document.createRange();\\\\n				range.collapse(true);\\\\n				range.setStart(el.childNodes[0], selectionStart);\\\\n				range.setEnd(el.childNodes[0], selectionEnd);\\\\n\\\\n				var sel = window.getSelection();\\\\n				sel.removeAllRanges();\\\\n				sel.addRange(range);\\\\n			}\\\\n\\\\n			return this;\\\\n		},\\\\n		getComputedStyle: function(styleName) {\\\\n			if (this.length == 0) return;\\\\n			var thiz = this[0];\\\\n			var result = this.css(styleName);\\\\n			result = result || (\\\\\\\$.browser.msie ?\\\\n				thiz.currentStyle[styleName]:\\\\n				document.defaultView.getComputedStyle(thiz, null)[styleName]);\\\\n			return result;\\\\n		},\\\\n		// easy clone method\\\\n		cloneStyle: function(target, styleName) {\\\\n			var styleVal = this.getComputedStyle(styleName);\\\\n			if (!!styleVal) {\\\\n				\\\\\\\$(target).css(styleName, styleVal);\\\\n			}\\\\n		},\\\\n		cloneAllStyle: function(target, style) {\\\\n			var thiz = this[0];\\\\n			for (var styleName in thiz.style) {\\\\n				var val = thiz.style[styleName];\\\\n				typeof val == 'string' || typeof val == 'number'\\\\n					? this.cloneStyle(target, styleName)\\\\n					: NaN;\\\\n			}\\\\n		},\\\\n		getCursorPosition : function() {\\\\n			var thiz = this[0], result = 0;\\\\n			if ('selectionStart' in thiz) {\\\\n				result = thiz.selectionStart;\\\\n			} else if('selection' in document) {\\\\n				var range = document.selection.createRange();\\\\n				if (parseInt(\\\\\\\$.browser.version) > 6) {\\\\n					try {\\\\n						thiz.focus();\\\\n					}\\\\n					catch (ex) {}\\\\n					var length = document.selection.createRange().text.length;\\\\n					range.moveStart('character', - thiz.value.length);\\\\n					result = range.text.length - length;\\\\n				} else {\\\\n					var bodyRange = document.body.createTextRange();\\\\n					bodyRange.moveToElementText(thiz);\\\\n					for (; bodyRange.compareEndPoints('StartToStart', range) < 0; result++)\\\\n						bodyRange.moveStart('character', 1);\\\\n					for (var i = 0; i <= result; i ++){\\\\n						if (thiz.value.charAt(i) == '\\\\\\\\n')\\\\n							result++;\\\\n					}\\\\n					var enterCount = thiz.value.split('\\\\\\\\n').length - 1;\\\\n					result -= enterCount;\\\\n					return result;\\\\n				}\\\\n			}\\\\n			return result;\\\\n		},\\\\n		getCaretPosition: calculator.getCaretPosition\\\\n	});\\\\n});\\\\n\\\\n/**\\\\n * jQuery plugin for autocompleting within a textarea\\\\n * @license under dfyw\\\\n * @author leChantaux (@leChantaux)\\\\n */\\\\n\\\\n(function (\\\\\\\$, window, undefined) {\\\\n	// Create the defaults once\\\\n	var elementFactory = function (element, value, token) {\\\\n		element.text(value.val);\\\\n	};\\\\n\\\\n	var pluginName = 'sew',\\\\n		defaults = {\\\\n			token: '@',\\\\n			elementFactory: elementFactory,\\\\n			values: [],\\\\n			repeat: true,\\\\n			onFilterChanged: undefined,\\\\n			preload: false\\\\n		};\\\\n\\\\n	function Plugin(element, options) {\\\\n		this.element = element;\\\\n		this.\\\\\\\$element = is_wysiwyg_field(element) ? null : \\\\\\\$(element);\\\\n		this.\\\\\\\$itemList = \\\\\\\$(Plugin.MENU_TEMPLATE);\\\\n		this.currentToken = undefined;\\\\n		this.startPos = null;\\\\n\\\\n		this.options = \\\\\\\$.extend({}, defaults, options);\\\\n		if (!\\\\\\\$.isArray(this.options.token)) {\\\\n			this.options.token = [this.options.token];\\\\n		}\\\\n		this.reset();\\\\n\\\\n		this._defaults = defaults;\\\\n		this._name = pluginName;\\\\n\\\\n		var tokens = this.options.token.join('');\\\\n		this.expression = new RegExp('(^|\\\\\\\\\\\\\\\\s)([' + tokens + '])([\\\\\\\\\\\\\\\\w.]*)\\\\\\\$');\\\\n		this.cleanupHandle = null;\\\\n\\\\n		this.init();\\\\n	}\\\\n\\\\n	Plugin.MENU_TEMPLATE = '<div class=\\\\\\\"-sew-list-container\\\\\\\" style=\\\\\\\"display: none; position: absolute;\\\\\\\"><ul class=\\\\\\\"-sew-list\\\\\\\"></ul></div>';\\\\n\\\\n	Plugin.ITEM_TEMPLATE = '<li class=\\\\\\\"-sew-list-item\\\\\\\"></li>';\\\\n\\\\n	Plugin.KEYS = [40, 38, 13, 27, 9];\\\\n\\\\n	Plugin.prototype.init = function () {\\\\n		if (this.options.values.length < 1 && !this.options.onFilterChanged) {\\\\n			return;\\\\n		}\\\\n\\\\n		if (this.options.preload && this.options.onFilterChanged) {\\\\n			this.options.onFilterChanged(this);\\\\n		}\\\\n\\\\n		if (typeof window.CKEDITOR != 'undefined' && window.CKEDITOR != null && typeof CKEDITOR.instances[this.element.id]!='undefined') {\\\\n			var _this = this;\\\\n			var editor = CKEDITOR.instances[this.element.id];\\\\n			if (editor.document) {\\\\n				editor.document.on('keyup', function(e) {\\\\n					_this.onKeyUp.call(_this, e);\\\\n				});\\\\n				editor.document.on('keydown', function(e) {\\\\n					_this.onKeyDown.call(_this, e);\\\\n				});\\\\n				editor.document.on('focus', function(e) {\\\\n					_this.renderElements.call(_this, _this.options.values);\\\\n				});\\\\n				editor.document.on('blur', function(e) {\\\\n					_this.remove.call(_this);\\\\n				});\\\\n				editor.document.on('click', function(e) {\\\\n					_this.remove.call(_this);\\\\n				});\\\\n			}\\\\n		}\\\\n		else if (this.\\\\\\\$element) {\\\\n			this.\\\\\\\$element\\\\n										.bind('keyup', \\\\\\\$.proxy(this.onKeyUp, this))\\\\n										.bind('keydown', \\\\\\\$.proxy(this.onKeyDown, this))\\\\n										.bind('focus', \\\\\\\$.proxy(this.renderElements, this, this.options.values))\\\\n										.bind('blur', \\\\\\\$.proxy(this.remove, this))\\\\n										.bind('click', \\\\\\\$.proxy(this.remove, this))\\\\n										;\\\\n		}\\\\n	};\\\\n\\\\n	Plugin.prototype.reset = function () {\\\\n		this.index = 0;\\\\n		this.matched = false;\\\\n		this.dontFilter = false;\\\\n		this.lastFilter = undefined;\\\\n		this.filtered = this.options.values.slice(0);\\\\n	};\\\\n\\\\n	Plugin.prototype.setValues = function (values) {\\\\n		this.options.values = values;\\\\n\\\\n		var listVisible = this.\\\\\\\$itemList.is(':visible');\\\\n		this.reset();\\\\n\\\\n		if (values.length > 0) {\\\\n			if (!listVisible) {\\\\n				this.displayList();\\\\n			}\\\\n\\\\n			var filter = this.lastFilter;\\\\n			if (!filter) {\\\\n				filter = '';\\\\n			}\\\\n			this.lastFilter = '\\\\\\\\n';\\\\n			this.filterList(filter);\\\\n		}\\\\n		else {\\\\n			this.hideList();\\\\n		}\\\\n	};\\\\n\\\\n	Plugin.prototype.next = function () {\\\\n		this.index = (this.index + 1) % this.filtered.length;\\\\n		this.highlightItem();\\\\n	};\\\\n\\\\n	Plugin.prototype.prev = function () {\\\\n		this.index = (this.index + this.filtered.length - 1) % this.filtered.length;\\\\n		this.highlightItem();\\\\n	};\\\\n\\\\n	Plugin.prototype.select = function () {\\\\n		this.replace(this.filtered[this.index].val);\\\\n		if (this.\\\\\\\$element)\\\\n			this.\\\\\\\$element.trigger('mention-selected',this.filtered[this.index]);\\\\n		this.hideList();\\\\n	};\\\\n\\\\n	Plugin.prototype.remove = function () {\\\\n		this.\\\\\\\$itemList.fadeOut('slow');\\\\n\\\\n		this.cleanupHandle = window.setTimeout(\\\\\\\$.proxy(function () {\\\\n			this.\\\\\\\$itemList.remove();\\\\n		}, this), 1000);\\\\n	};\\\\n\\\\n	Plugin.prototype.replace = function (replacement) {\\\\n		if (this.\\\\\\\$element) {\\\\n			var startPos = this.\\\\\\\$element.getCursorPosition();\\\\n		} else {\\\\n			var startPos = this.startPos; // Has to use this.startPos because focus may have moved away, breaking CKEditor selection\\\\n		}\\\\n\\\\n		var fullStuff = this.getText();\\\\n		var val = fullStuff.substring(0, startPos);\\\\n		val = val.replace(this.expression, '\\\\\\\$1' + '\\\\\\\$2' + replacement);\\\\n\\\\n		var posfix = fullStuff.substring(startPos, fullStuff.length);\\\\n		var separator = posfix.match(/^\\\\\\\\s/) ? '' : (this.\\\\\\\$element?' ':'&nbsp;');\\\\n\\\\n		var finalFight = val + separator + posfix;\\\\n		this.setText(finalFight);\\\\n		if (this.\\\\\\\$element) {\\\\n			this.\\\\\\\$element.setCursorPosition(val.length + 1);\\\\n		} else {\\\\n			// Complex code to move CKEditor caret to end\\\\n\\\\n			CKEDITOR.instances[this.element.id].focus();\\\\n\\\\n			var s = CKEDITOR.instances[this.element.id].getSelection(); // getting selection\\\\n			var selected_ranges = s.getRanges(); // getting ranges\\\\n			if (typeof selected_ranges[0] != 'undefined') {\\\\n				var node = selected_ranges[0].startContainer; // selecting the starting node\\\\n				var parents = node.getParents(true);\\\\n\\\\n				node = parents[parents.length - 2].getFirst();\\\\n\\\\n				while (true) {\\\\n					var x = node.getNext();\\\\n					if (x == null) {\\\\n						break;\\\\n					}\\\\n					node = x;\\\\n				}\\\\n\\\\n				s.selectElement(node);\\\\n				selected_ranges = s.getRanges();\\\\n				selected_ranges[0].collapse(false);  //  false collapses the range to the end of the selected node, true before the node.\\\\n				s.selectRanges(selected_ranges);  // putting the current selection there\\\\n			}\\\\n		}\\\\n	};\\\\n\\\\n	Plugin.prototype.highlightItem = function () {\\\\n		if (this.filtered.length === 0) {\\\\n			return;\\\\n		}\\\\n\\\\n		this.\\\\\\\$itemList.find('.-sew-list-item').removeClass('selected');\\\\n\\\\n		var container = this.\\\\\\\$itemList.find('.-sew-list-item').parent();\\\\n		var element = this.filtered[this.index].element.addClass('selected');\\\\n\\\\n		var scrollPosition = element.position().top;\\\\n		container.scrollTop(container.scrollTop() + scrollPosition);\\\\n	};\\\\n\\\\n	Plugin.prototype.renderElements = function (values) {\\\\n		window.sew = this;\\\\n\\\\n		\\\\\\\$('body').append(this.\\\\\\\$itemList);\\\\n\\\\n		var container = this.\\\\\\\$itemList.find('ul').empty();\\\\n		for (var i=0;i<values.length;i++) {\\\\n			var e=values[i];\\\\n\\\\n			var \\\\\\\$item = \\\\\\\$(Plugin.ITEM_TEMPLATE);\\\\n\\\\n			this.options.elementFactory(\\\\\\\$item, e, this.currentToken);\\\\n\\\\n			e.element = \\\\\\\$item.appendTo(container).bind('click', \\\\\\\$.proxy(this.onItemClick, this, e)).bind('mouseover', \\\\\\\$.proxy(this.onItemHover, this, i));\\\\n		}\\\\n\\\\n		this.index = 0;\\\\n		this.highlightItem();\\\\n	};\\\\n\\\\n	Plugin.prototype.displayList = function () {\\\\n		if(!this.filtered.length) return;\\\\n\\\\n		this.\\\\\\\$itemList.show();\\\\n\\\\n		if (this.\\\\\\\$element) {\\\\n			var element = this.\\\\\\\$element;\\\\n			var offset = this.\\\\\\\$element.offset();\\\\n			var pos = element.getCaretPosition();\\\\n\\\\n			this.\\\\\\\$itemList.css({\\\\n				left: offset.left + pos.left,\\\\n				top: offset.top + pos.top\\\\n			});\\\\n		} else {\\\\n			// Complex hack to find cursor position in CKEditor\\\\n\\\\n			var dummyElement = CKEDITOR.instances[this.element.id].document.createElement( 'img',\\\\n				{\\\\n					attributes :\\\\n					{\\\\n						src : '\\\",\\n	ecv_IMG(\\\$cl,array(2),array(\\\"blank\\\",\\\"0\\\",\\\"admin\\\")),\\n	\\\"'.replace(/^https?:/,window.location.protocol),\\\\n						width : 0,\\\\n						height : 0\\\\n					}\\\\n				});\\\\n\\\\n			CKEDITOR.instances[this.element.id].insertElement( dummyElement );\\\\n\\\\n			var _this=this;\\\\n			window.setTimeout(function() {\\\\n				var cke = CKEDITOR.instances[_this.element.id];\\\\n				var iframe = cke.container.\\\\\\\$.getElementsByTagName('iframe')[0];\\\\n\\\\n				var sel = cke.getSelection(); // text selection\\\\n				var obj = sel.getStartElement().\\\\\\\$; // the element the selected text resides in\\\\n\\\\n				var x = find_pos_x(obj,true) - get_window_scroll_x() + get_window_scroll_x(cke.window.\\\\\\\$) + find_pos_x(iframe,true);\\\\n				var y = find_pos_y(obj,true) - get_window_scroll_y() + get_window_scroll_y(cke.window.\\\\\\\$) + find_pos_y(iframe,true) + 20;\\\\n				// NB: The get_window_scroll_x/get_window_scroll_y is because calculation happened on wrong window object\\\\n\\\\n				var text = _this.getText().substring(0, this.startPos);\\\\n				console.log(text);\\\\n				var lines = (text.match(/<br( \\\\\\\\/)?>/g) || []).length;\\\\n				window.top.console.log(lines);\\\\n				y += 17 * lines;\\\\n\\\\n				dummyElement.remove();\\\\n\\\\n				_this.\\\\\\\$itemList.css({\\\\n					left: x,\\\\n					top: y\\\\n				});\\\\n			}, 0);\\\\n		}\\\\n	};\\\\n\\\\n	Plugin.prototype.hideList = function () {\\\\n		this.\\\\\\\$itemList.hide();\\\\n		this.reset();\\\\n	};\\\\n\\\\n	Plugin.prototype.filterList = function (val) {\\\\n		if(val == this.lastFilter) return;\\\\n\\\\n		this.lastFilter = val;\\\\n		this.\\\\\\\$itemList.find('.-sew-list-item').remove();\\\\n		var values = this.options.values;\\\\n\\\\n		var vals = this.filtered = values.filter(\\\\\\\$.proxy(function (e) {\\\\n			var exp = new RegExp('\\\\\\\\\\\\\\\\W*' + this.options.token + e.val + '(\\\\\\\\\\\\\\\\W|\\\\\\\$)');\\\\n			if(!this.options.repeat && this.getText().match(exp)) {\\\\n				return false;\\\\n			}\\\\n\\\\n			return	val === '' ||\\\\n							e.val.toLowerCase().indexOf(val.toLowerCase()) >= 0 ||\\\\n							(e.meta || '').toLowerCase().indexOf(val.toLowerCase()) >= 0;\\\\n		}, this));\\\\n\\\\n		if(vals.length) {\\\\n			this.renderElements(vals);\\\\n			this.\\\\\\\$itemList.show();\\\\n		} else {\\\\n			this.hideList();\\\\n		}\\\\n	};\\\\n\\\\n	Plugin.prototype.getText = function () {\\\\n		if (!this.\\\\\\\$element) {\\\\n			return CKEDITOR.instances[this.element.id].getData();\\\\n		}\\\\n\\\\n		return(this.\\\\\\\$element.val() || this.\\\\\\\$element.text());\\\\n	};\\\\n\\\\n	Plugin.prototype.setText = function (text) {\\\\n		if (!this.\\\\\\\$element) {\\\\n			//CKEDITOR.instances[this.element.id].setData(text);	Wipes events out\\\\n			CKEDITOR.instances[this.element.id].document.getBody().setHtml(text);\\\\n			return;\\\\n		}\\\\n\\\\n		if(this.\\\\\\\$element.is('input,textarea')) {\\\\n			this.\\\\\\\$element.val(text);\\\\n		} else {\\\\n			this.\\\\\\\$element.html(text);\\\\n		}\\\\n	};\\\\n\\\\n	Plugin.prototype.onKeyUp = function (e) {\\\\n		if (this.\\\\\\\$element) {\\\\n			var startPos = this.\\\\\\\$element.getCursorPosition();\\\\n			var val = this.getText().substring(0, startPos);\\\\n		} else {\\\\n			var range = CKEDITOR.instances[this.element.id].getSelection().getRanges()[0];\\\\n			if (typeof range == 'undefined') return; // Out of focus :S\\\\n			var allText = this.getText();\\\\n			allText = allText.replace(/\\\\\\\\u200B/,'');\\\\n			var textNode = range.startContainer.\\\\\\\$;\\\\n			var selectedText = textNode.nodeValue?textNode.nodeValue:textNode.textContent;\\\\n			selectedText = selectedText.replace(/\\\\\\\\u200B/,'');\\\\n			var startPos = allText.lastIndexOf(selectedText);\\\\n			if (startPos == -1) return; // Could not correlate, maybe some weird HTML encoding problem\\\\n			startPos += range.startOffset; // A but of a fudge. We assume the last occurrence of the element we're on, in the overall HTML, is the one we're working in ; no API to get true cursor position\\\\n			var val = allText.substring(0, startPos);\\\\n		}\\\\n		var matches = val.match(this.expression);\\\\n\\\\n		if(!matches && this.matched) {\\\\n			this.matched = false;\\\\n			this.dontFilter = false;\\\\n			this.hideList();\\\\n			return;\\\\n		}\\\\n\\\\n		if (matches) {\\\\n			this.startPos = startPos;\\\\n\\\\n			this.currentToken = matches[2];\\\\n\\\\n			if (this.currentToken != matches[2] && this.currentToken) {\\\\n				this.currentToken = matches[2];\\\\n\\\\n				if (this.options.onFilterChanged) {\\\\n					this.options.values = [];\\\\n					this.reset();\\\\n				}\\\\n			}\\\\n\\\\n			if (this.options.onFilterChanged) {\\\\n				if (this.options.onFilterChanged) {\\\\n					this.options.onFilterChanged(this, matches[3], matches[2]);\\\\n				}\\\\n			}\\\\n\\\\n			if (!this.matched) {\\\\n				this.displayList();\\\\n				this.lastFilter = '\\\\\\\\n';\\\\n				this.matched = true;\\\\n			}\\\\n\\\\n			if (!this.dontFilter) {\\\\n				this.filterList(matches[3]);\\\\n			}\\\\n		}\\\\n	};\\\\n\\\\n	Plugin.prototype.onKeyDown = function (e) {\\\\n		if (this.\\\\\\\$element) {\\\\n			var keyCode = e.keyCode;\\\\n		} else {\\\\n			var keyCode = e.data.getKey();\\\\n		}\\\\n\\\\n		var listVisible = this.\\\\\\\$itemList.is(':visible');\\\\n		if(!listVisible || (Plugin.KEYS.indexOf(keyCode) < 0)) return;\\\\n\\\\n		switch(keyCode) {\\\\n			case 9:\\\\n			case 13:\\\\n				this.select();\\\\n				break;\\\\n			case 40:\\\\n				this.next();\\\\n				break;\\\\n			case 38:\\\\n				this.prev();\\\\n				break;\\\\n			case 27:\\\\n				this.\\\\\\\$itemList.hide();\\\\n				this.dontFilter = true;\\\\n				break;\\\\n		}\\\\n\\\\n		if (this.\\\\\\\$element) {\\\\n			e.preventDefault();\\\\n		}\\\\n	};\\\\n\\\\n	Plugin.prototype.onItemClick = function (element, e) {\\\\n		if(this.cleanupHandle) window.clearTimeout(this.cleanupHandle);\\\\n\\\\n		try {\\\\n			if (this.\\\\\\\$element) {\\\\n				this.\\\\\\\$element.focus();\\\\n			} else {\\\\n				CKEDITOR.instances[this.element.id].focus();\\\\n			}\\\\n		}\\\\n		catch (ex) {}\\\\n		this.replace(element.val);\\\\n		if (this.\\\\\\\$element)\\\\n			this.\\\\\\\$element.trigger('mention-selected',this.filtered[this.index]);\\\\n		this.hideList();\\\\n	};\\\\n\\\\n	Plugin.prototype.onItemHover = function (index, e) {\\\\n		this.index = index;\\\\n		this.highlightItem();\\\\n	};\\\\n\\\\n	\\\\\\\$.fn[pluginName] = function (options) {\\\\n		return this.each(function () {\\\\n			if(!\\\\\\\$.data(this, 'plugin_' + pluginName) || this.element && is_wysiwyg_field(this.element)) {\\\\n				\\\\\\\$.data(this, 'plugin_' + pluginName, new Plugin(this, options));\\\\n			}\\\\n		});\\\\n	};\\\\n}(jQuery, window));\\\\n\\\\n/**\\\\n * @param {jQuery} element the target element (LI)\\\\n * @param {*} e object containing the val and meta properties (from the input list)\\\\n */\\\\nfunction autoCompleteElementFactory(element,e) {\\\\n	var customItemTemplate='<div><span />&nbsp;<small /></div>';\\\\n	var template=\\\\\\\$(customItemTemplate).find('span')\\\\n		.text('@'+e.val).end()\\\\n		.find('small')\\\\n		.text((e.meta=='')?'':'('+e.meta+')').end();\\\\n	element.append(template);\\\\n}\\\\n\\\\n/* Composr binder code */\\\\n\\\\nfunction set_up_comcode_autocomplete(name,wysiwyg)\\\\n{\\\\n	if (typeof wysiwyg!='undefined' && wysiwyg && wysiwyg_on() && (typeof CKEDITOR=='undefined' || typeof CKEDITOR.instances[name]=='undefined'))\\\\n		return;\\\\n\\\\n	register_mouse_listener();\\\\n\\\\n	\\\\\\\$('#'+name).sew({\\\\n		values: [],\\\\n		token: '@',\\\\n		elementFactory: autoCompleteElementFactory,\\\\n		onFilterChanged: function(sew, token, expression) {\\\\n			do_ajax_request(\\\\n				'\\\",\\n	ecv_FIND_SCRIPT(\\\$cl,array(2),array(\\\"namelike\\\")),\\n	\\\"?id='+window.encodeURIComponent(token)+keep_stub(),\\\\n				function(result,list_contents) {\\\\n					var new_values = [];\\\\n					for (var i=0;i<list_contents.childNodes.length;i++)\\\\n					{\\\\n						new_values.push({\\\\n							val: list_contents.childNodes[i].getAttribute('value'),\\\\n							meta: list_contents.childNodes[i].getAttribute('displayname')\\\\n						});\\\\n					}\\\\n					sew.setValues(new_values);\\\\n				}\\\\n			);\\\\n		}\\\\n	});\\\\n}\\\\n\\\\n/* Polyfills for IE8 */\\\\n\\\\nif (!Array.prototype.filter) {\\\\n  Array.prototype.filter = function(\\\\n	 a, // a function to test each value of the array against. Truthy values will be put into the new array and falsy values will be excluded from the new array\\\\n    b, // placeholder\\\\n    c, // placeholder \\\\n    d, // placeholder\\\\n    e  // placeholder\\\\n  ) {\\\\n      c = this; // cache the array\\\\n      d = []; // array to hold the new values which match the expression\\\\n      for (e in c) // for each value in the array, \\\\n        ~~e + '' == e && e >= 0 && // coerce the array position and if valid,\\\\n        a.call(b, c[e], +e, c) && // pass the current value into the expression and if truthy,\\\\n        d.push(c[e]); // add it to the new array\\\\n      \\\\n      return d; // give back the new array\\\\n  };\\\\n}\\\\n\\\\nif (!Array.prototype.indexOf) {\\\\n  Array.prototype.indexOf = function (searchElement , fromIndex) {\\\\n    var i,\\\\n        pivot = (fromIndex) ? fromIndex : 0,\\\\n        length;\\\\n\\\\n    if (!this) {\\\\n      throw new TypeError();\\\\n    }\\\\n\\\\n    length = this.length;\\\\n\\\\n    if (length === 0 || pivot >= length) {\\\\n      return -1;\\\\n    }\\\\n\\\\n    if (pivot < 0) {\\\\n      pivot = length - Math.abs(pivot);\\\\n    }\\\\n\\\\n    for (i = pivot; i < length; i++) {\\\\n      if (this[i] === searchElement) {\\\\n        return i;\\\\n      }\\\\n    }\\\\n    return -1;\\\\n  };\\\\n}\\\\n\\\";\");\";}}");

